apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-service
  labels:
    app: ml-service
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ml-service
  template:
    metadata:
      labels:
        app: ml-service
    spec:
      containers:
      - name: ml-service
        image: 5g-network-optimization/ml-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5050
        resources:
          # Higher limits allow large models to be loaded without OOM errors
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "1"
            memory: "1Gi"
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5050
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5050
          initialDelaySeconds: 15
          periodSeconds: 20
        env:
        - name: NEF_API_URL
          value: "http://nef-emulator:8080"
        - name: MODEL_PATH
          value: "/app/models/antenna_selector.joblib"
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
      volumes:
      - name: model-storage
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ml-service
spec:
  selector:
    app: ml-service
  ports:
  - port: 5050
    targetPort: 5050
  type: ClusterIP

---
# Optional ingress, enable if an Ingress controller is available
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ml-service
spec:
  rules:
  - host: ml-service.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ml-service
            port:
              number: 5050
